{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import axios from'axios';import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import*as utils from\"../Utils.js\";var EditGig=/*#__PURE__*/function(_Component){_inherits(EditGig,_Component);var _super=_createSuper(EditGig);function EditGig(props){var _this;_classCallCheck(this,EditGig);// Super refers to the parent class' (Component) constructor.\n// The \"this\" keyword cannot be used until after you have called the parent constructor.\n_this=_super.call(this,props);_this.onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var updatedGig;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();// Change any line breaks into a singular string of comma-separated band/artist names.\n_this.state.gig_bands=_this.state.gig_bands.replace(/[\\n\\r]/g,', ');// Create a new object containing our updated gig.\nupdatedGig={gig_date:utils.formatFinalDate(_this.state.gig_date,_this.state.festival_end_date),gig_or_fest:_this.state.gig_or_fest,gig_tourFestName:_this.state.gig_tourFestName,gig_bands:_this.state.gig_bands,gig_venue:_this.state.gig_venue,gig_cancelled:_this.state.gig_cancelled};console.log(updatedGig);// Overwrite the existing data using the given ID.\n// We await here because we want the changes to complete before the user sees the main page again.\n_context.next=6;return axios.post('http://localhost:4000/gigs/update/'+_this.props.match.params.id,updatedGig).then(function(res){return console.log(res.data);});case 6:// Change the display back to the main page (Gig List).\n_this.props.history.push('/gig-tracker/');case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.onChangeGigDate=_this.onChangeGigDate.bind(_assertThisInitialized(_this));_this.onChangeFestivalEndDate=_this.onChangeFestivalEndDate.bind(_assertThisInitialized(_this));_this.onChangeGigBands=_this.onChangeGigBands.bind(_assertThisInitialized(_this));_this.onChangeGigOrFest=_this.onChangeGigOrFest.bind(_assertThisInitialized(_this));_this.onChangeGigTourFestName=_this.onChangeGigTourFestName.bind(_assertThisInitialized(_this));_this.onChangeGigVenue=_this.onChangeGigVenue.bind(_assertThisInitialized(_this));_this.onChangeGigCancelled=_this.onChangeGigCancelled.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));_this.state={gig_date:new Date(),festival_end_date:'',gig_or_fest:'',gig_tourFestName:'',gig_bands:'',gig_venue:'',gig_cancelled:false};return _this;}_createClass(EditGig,[{key:\"onChangeGigDate\",value:function onChangeGigDate(event){var _this2=this;this.setState({gig_date:event},function(){if(_this2.state.festival_end_date<_this2.state.gig_date){_this2.setState({festival_end_date:_this2.state.gig_date});}});}},{key:\"onChangeFestivalEndDate\",value:function onChangeFestivalEndDate(event){if(event<this.state.gig_date){// TODO: Show some sort of error UI.\nconsole.log('onChangeFestivalEndDate: End Date cannot be earlier than initial Date.');return;}this.setState({festival_end_date:event});}},{key:\"onChangeGigOrFest\",value:function onChangeGigOrFest(event){this.setState({gig_or_fest:event.target.value});}},{key:\"onChangeGigTourFestName\",value:function onChangeGigTourFestName(event){this.setState({gig_tourFestName:event.target.value});}},{key:\"onChangeGigBands\",value:function onChangeGigBands(event){this.setState({gig_bands:event.target.value});}},{key:\"onChangeGigVenue\",value:function onChangeGigVenue(event){this.setState({gig_venue:event.target.value});}},{key:\"onChangeGigCancelled\",value:function onChangeGigCancelled(event){this.setState({gig_cancelled:!this.state.gig_cancelled});}},{key:\"processReturnedDate\",value:function processReturnedDate(date){if(date===undefined){return new Date();}if(date.includes(\" - \")){var splitDate=date.split(\" - \");return[new Date(splitDate[0]),new Date(splitDate[1])];}else{return new Date(date);}}},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;// Get the gig from the DB based on the given ID and set it to the current state of the page.\naxios.get('http://localhost:4000/gigs/'+this.props.match.params.id).then(function(response){var dates=_this3.processReturnedDate(response.data.gig_date);_this3.setState({gig_date:dates.length===undefined?dates:dates[0],festival_end_date:dates.length===undefined?'':dates[1],gig_or_fest:response.data.gig_or_fest,gig_tourFestName:response.data.gig_tourFestName,// Put bands back on separate lines.\ngig_bands:response.data.gig_bands.replace(/, /g,'\\n'),gig_venue:response.data.gig_venue,gig_cancelled:response.data.gig_cancelled===undefined?false:response.data.gig_cancelled});}).catch(function(error){console.log(error);});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"form\",id:\"gigFormDiv\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Edit Gig\"),/*#__PURE__*/React.createElement(\"h3\",{id:\"dateHeader\"},\"Date\"),/*#__PURE__*/React.createElement(DatePicker,{selected:this.state.gig_date,dateFormat:\"d MMMM yyyy\",onChange:this.onChangeGigDate}),this.state.gig_or_fest==='Festival'?/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:30}},/*#__PURE__*/React.createElement(\"h4\",{id:\"endDateHeader\"},\"End Date\"),/*#__PURE__*/React.createElement(DatePicker,{selected:this.state.festival_end_date,dateFormat:\"d MMMM yyyy\",onChange:this.onChangeFestivalEndDate})):null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-check form-check-inline\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"gigOrFestivalRadios\",id:\"gigRadio\",value:\"Gig\",checked:this.state.gig_or_fest==='Gig',onChange:this.onChangeGigOrFest}),/*#__PURE__*/React.createElement(\"label\",{className:\"form-check-label\"},\"Gig\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-check form-check-inline\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"gigOrFestivalRadios\",id:\"festivalRadio\",value:\"Festival\",checked:this.state.gig_or_fest==='Festival',onChange:this.onChangeGigOrFest}),/*#__PURE__*/React.createElement(\"label\",{className:\"form-check-label\"},\"Festival\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Tour Name: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",value:this.state.gig_tourFestName,onChange:this.onChangeGigTourFestName})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Bands: \"),/*#__PURE__*/React.createElement(\"textarea\",{type:\"text\",className:\"form-control\",value:this.state.gig_bands,onChange:this.onChangeGigBands}),/*#__PURE__*/React.createElement(\"small\",{id:\"bandHelp\",className:\"form-text text-muted\",style:{marginTop:2}},\"Please place each band/artist on a new line.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Venue: \"),/*#__PURE__*/React.createElement(\"input\",{id:\"venueName\",name:\"venueName\",type:\"text\",className:\"form-control\",value:this.state.gig_venue,onChange:this.onChangeGigVenue})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-check\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-check-input\",id:\"gigCancelledCheckbox\",type:\"checkbox\",name:\"gigCancelledCheckbox\",onChange:this.onChangeGigCancelled,checked:this.state.gig_cancelled,value:this.state.gig_cancelled}),/*#__PURE__*/React.createElement(\"label\",{className:\"form-check-label\",htmlFor:\"gigCancelledCheckbox\"},\"Cancelled\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Edit Gig\",className:\"btn btn-primary\"}))));}}]);return EditGig;}(Component);export{EditGig as default};","map":{"version":3,"sources":["C:/Users/Harrison/Documents/JavaScript Projects/Gig Tracker/src/components/edit-gig.component.js"],"names":["React","Component","axios","DatePicker","utils","EditGig","props","onSubmit","event","preventDefault","state","gig_bands","replace","updatedGig","gig_date","formatFinalDate","festival_end_date","gig_or_fest","gig_tourFestName","gig_venue","gig_cancelled","console","log","post","match","params","id","then","res","data","history","push","onChangeGigDate","bind","onChangeFestivalEndDate","onChangeGigBands","onChangeGigOrFest","onChangeGigTourFestName","onChangeGigVenue","onChangeGigCancelled","Date","setState","target","value","date","undefined","includes","splitDate","split","get","response","dates","processReturnedDate","length","catch","error","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport * as utils from \"../Utils.js\";\r\n\r\nexport default class EditGig extends Component {\r\n    constructor(props) {\r\n        // Super refers to the parent class' (Component) constructor.\r\n        // The \"this\" keyword cannot be used until after you have called the parent constructor.\r\n        super(props);\r\n\r\n        this.onChangeGigDate = this.onChangeGigDate.bind(this);\r\n        this.onChangeFestivalEndDate = this.onChangeFestivalEndDate.bind(this);\r\n        this.onChangeGigBands = this.onChangeGigBands.bind(this);\r\n        this.onChangeGigOrFest = this.onChangeGigOrFest.bind(this);\r\n        this.onChangeGigTourFestName = this.onChangeGigTourFestName.bind(this);\r\n        this.onChangeGigVenue = this.onChangeGigVenue.bind(this);\r\n        this.onChangeGigCancelled = this.onChangeGigCancelled.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            gig_date: new Date(),\r\n            festival_end_date: '',\r\n            gig_or_fest: '',\r\n            gig_tourFestName: '',\r\n            gig_bands: '',\r\n            gig_venue: '',\r\n            gig_cancelled: false\r\n        }\r\n    }\r\n\r\n    onChangeGigDate(event) {\r\n        this.setState({\r\n            gig_date: event\r\n        }, () => {\r\n            if (this.state.festival_end_date < this.state.gig_date) {\r\n                this.setState({\r\n                    festival_end_date: this.state.gig_date\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangeFestivalEndDate(event) {\r\n        if (event < this.state.gig_date) {\r\n            // TODO: Show some sort of error UI.\r\n            console.log('onChangeFestivalEndDate: End Date cannot be earlier than initial Date.');\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            festival_end_date: event\r\n        });\r\n    }\r\n\r\n    onChangeGigOrFest(event) {\r\n        this.setState({\r\n            gig_or_fest: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigTourFestName(event) {\r\n        this.setState({\r\n            gig_tourFestName: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigBands(event) {\r\n        this.setState({\r\n            gig_bands: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigVenue(event) {\r\n        this.setState({\r\n            gig_venue: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigCancelled(event) {\r\n        this.setState({\r\n            gig_cancelled: !this.state.gig_cancelled\r\n        });\r\n    }\r\n\r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Change any line breaks into a singular string of comma-separated band/artist names.\r\n        this.state.gig_bands = this.state.gig_bands.replace(/[\\n\\r]/g, ', ');\r\n\r\n        // Create a new object containing our updated gig.\r\n        const updatedGig = {\r\n            gig_date: utils.formatFinalDate(this.state.gig_date, this.state.festival_end_date),\r\n            gig_or_fest: this.state.gig_or_fest,\r\n            gig_tourFestName: this.state.gig_tourFestName,\r\n            gig_bands: this.state.gig_bands,\r\n            gig_venue: this.state.gig_venue,\r\n            gig_cancelled: this.state.gig_cancelled\r\n        };\r\n        console.log(updatedGig);\r\n\r\n        // Overwrite the existing data using the given ID.\r\n        // We await here because we want the changes to complete before the user sees the main page again.\r\n        await axios.post('http://localhost:4000/gigs/update/' + this.props.match.params.id, updatedGig)\r\n            .then(res => console.log(res.data));\r\n\r\n        // Change the display back to the main page (Gig List).\r\n        this.props.history.push('/gig-tracker/');\r\n    }\r\n\r\n    processReturnedDate(date) {\r\n        if (date === undefined) {\r\n            return new Date();\r\n        }\r\n\r\n        if (date.includes(\" - \")) {\r\n            var splitDate = date.split(\" - \");\r\n            return [new Date(splitDate[0]), new Date(splitDate[1])];\r\n        } else {\r\n            return new Date(date);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Get the gig from the DB based on the given ID and set it to the current state of the page.\r\n        axios.get('http://localhost:4000/gigs/' + this.props.match.params.id)\r\n            .then(response => {\r\n                var dates = this.processReturnedDate(response.data.gig_date);\r\n\r\n                this.setState({\r\n                    gig_date: dates.length === undefined ? dates : dates[0],\r\n                    festival_end_date: dates.length === undefined ? '' : dates[1],\r\n                    gig_or_fest: response.data.gig_or_fest,\r\n                    gig_tourFestName: response.data.gig_tourFestName,\r\n\r\n                    // Put bands back on separate lines.\r\n                    gig_bands: response.data.gig_bands.replace(/, /g, '\\n'),\r\n                    gig_venue: response.data.gig_venue,\r\n                    gig_cancelled: response.data.gig_cancelled === undefined ? false : response.data.gig_cancelled\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form\" id=\"gigFormDiv\">\r\n                <h3>Edit Gig</h3>\r\n                <h3 id=\"dateHeader\">Date</h3>\r\n                <DatePicker\r\n                    selected={this.state.gig_date}\r\n                    dateFormat={\"d MMMM yyyy\"}\r\n                    onChange={this.onChangeGigDate}\r\n                />\r\n                {this.state.gig_or_fest === 'Festival' ?\r\n                    <div style={{ marginTop: 30 }}>\r\n                        <h4 id=\"endDateHeader\">End Date</h4>\r\n                        <DatePicker\r\n                            selected={this.state.festival_end_date}\r\n                            dateFormat={\"d MMMM yyyy\"}\r\n                            onChange={this.onChangeFestivalEndDate}\r\n                        />\r\n                    </div>\r\n                    : null}\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"gigOrFestivalRadios\"\r\n                                id=\"gigRadio\"\r\n                                value=\"Gig\"\r\n                                checked={this.state.gig_or_fest === 'Gig'}\r\n                                onChange={this.onChangeGigOrFest}\r\n                            />\r\n                            <label className=\"form-check-label\">Gig</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"gigOrFestivalRadios\"\r\n                                id=\"festivalRadio\"\r\n                                value=\"Festival\"\r\n                                checked={this.state.gig_or_fest === 'Festival'}\r\n                                onChange={this.onChangeGigOrFest}\r\n                            />\r\n                            <label className=\"form-check-label\">Festival</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Tour Name: </label>\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.gig_tourFestName}\r\n                            onChange={this.onChangeGigTourFestName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Bands: </label>\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.gig_bands}\r\n                            onChange={this.onChangeGigBands}\r\n                        />\r\n                        <small id=\"bandHelp\"\r\n                            className=\"form-text text-muted\"\r\n                            style={{ marginTop: 2 }}>\r\n                            Please place each band/artist on a new line.\r\n                                    </small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Venue: </label>\r\n                        <input\r\n                            id=\"venueName\"\r\n                            name=\"venueName\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.gig_venue}\r\n                            onChange={this.onChangeGigVenue}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\"\r\n                            id=\"gigCancelledCheckbox\"\r\n                            type=\"checkbox\"\r\n                            name=\"gigCancelledCheckbox\"\r\n                            onChange={this.onChangeGigCancelled}\r\n                            checked={this.state.gig_cancelled}\r\n                            value={this.state.gig_cancelled}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"gigCancelledCheckbox\">\r\n                            Cancelled\r\n                        </label>\r\n                    </div>\r\n                    <br />\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Edit Gig\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}