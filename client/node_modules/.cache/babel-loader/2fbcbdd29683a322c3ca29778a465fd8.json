{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\src\\\\components\\\\edit-gig.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class EditGig extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeGigBands = this.onChangeGigBands.bind(this);\n    this.onChangeGigOrFest = this.onChangeGigOrFest.bind(this);\n    this.onChangeGigTourFestName = this.onChangeGigTourFestName.bind(this);\n    this.onChangeGigVenue = this.onChangeGigVenue.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      gig_date: '',\n      gig_or_fest: '',\n      gig_tourFestName: '',\n      gig_bands: '',\n      gig_venue: ''\n    };\n  }\n\n  onChangeGigOrFest(event) {\n    this.setState({\n      gig_or_fest: event.target.value\n    });\n  }\n\n  onChangeGigTourFestName(event) {\n    this.setState({\n      gig_tourFestName: event.target.value\n    });\n  }\n\n  onChangeGigBands(event) {\n    let bands = event.target.value;\n    bands = bands.replace(/[\\n\\r]/g, ', ');\n    this.setState({\n      gig_bands: bands\n    });\n  }\n\n  onChangeGigVenue(event) {\n    this.setState({\n      gig_venue: event.target.value\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault(); // Create a new object containing our updated gig.\n\n    const obj = {\n      gig_or_fest: this.state.gig_or_fest,\n      gig_tourFestName: this.state.gig_tourFestName,\n      gig_bands: this.state.gig_bands,\n      gig_venue: this.state.gig_venue\n    };\n    console.log(obj); // Overwrite the existing data.\n\n    axios.post('http://localhost:4000/gigs/update/' + this.props.match.params.id, obj).then(res => console.log(res.data)); // Change the display back to the main page (Gig List).\n\n    this.props.history.push('/');\n  }\n\n  componentDidMount() {\n    // Get the gig from the DB based on the given ID and set it to the current state of the page.\n    axios.get('http://localhost:4000/gigs/' + this.props.match.params.id).then(response => {\n      this.setState({\n        gig_or_fest: response.data.gig_or_fest,\n        gig_tourFestName: response.data.gig_tourFestName,\n        gig_bands: response.data.gig_bands,\n        gig_venue: response.data.gig_venue\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      id: \"gigFormDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Edit Gig\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      name: \"gigOrFestivalRadios\",\n      id: \"gigRadio\",\n      value: \"Gig\",\n      checked: this.state.gig_or_fest === 'Gig',\n      onChange: this.onChangeGigOrFest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, \"Gig\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      name: \"gigOrFestivalRadios\",\n      id: \"festivalRadio\",\n      value: \"Festival\",\n      checked: this.state.gig_or_fest === 'Festival',\n      onChange: this.onChangeGigOrFest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, \"Festival\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \"Tour Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.gig_tourFestName,\n      onChange: this.onChangeGigTourFestName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, \"Bands: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.gig_bands,\n      onChange: this.onChangeGigBands,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"bandHelp\",\n      className: \"form-text text-muted\",\n      style: {\n        marginTop: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, \"Please place each band/artist on a new line.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \"Venue: \"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"venueName\",\n      name: \"venueName\",\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.gig_venue,\n      onChange: this.onChangeGigVenue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Edit Gig\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Harrison/Documents/JavaScript Projects/Gig Tracker/src/components/edit-gig.component.js"],"names":["React","Component","axios","EditGig","constructor","props","onChangeGigBands","bind","onChangeGigOrFest","onChangeGigTourFestName","onChangeGigVenue","onSubmit","state","gig_date","gig_or_fest","gig_tourFestName","gig_bands","gig_venue","event","setState","target","value","bands","replace","preventDefault","obj","console","log","post","match","params","id","then","res","data","history","push","componentDidMount","get","response","catch","error","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class EditGig extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeGigBands = this.onChangeGigBands.bind(this);\r\n        this.onChangeGigOrFest = this.onChangeGigOrFest.bind(this);\r\n        this.onChangeGigTourFestName = this.onChangeGigTourFestName.bind(this);\r\n        this.onChangeGigVenue = this.onChangeGigVenue.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            gig_date: '',\r\n            gig_or_fest: '',\r\n            gig_tourFestName: '',\r\n            gig_bands: '',\r\n            gig_venue: ''\r\n        }\r\n    }\r\n\r\n    onChangeGigOrFest(event) {\r\n        this.setState({\r\n            gig_or_fest: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigTourFestName(event) {\r\n        this.setState({\r\n            gig_tourFestName: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigBands(event) {\r\n        let bands = event.target.value\r\n        bands = bands.replace(/[\\n\\r]/g, ', ');\r\n\r\n        this.setState({\r\n            gig_bands: bands\r\n        });\r\n    }\r\n\r\n    onChangeGigVenue(event) {\r\n        this.setState({\r\n            gig_venue: event.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        // Create a new object containing our updated gig.\r\n        const obj = {\r\n            gig_or_fest: this.state.gig_or_fest,\r\n            gig_tourFestName: this.state.gig_tourFestName,\r\n            gig_bands: this.state.gig_bands,\r\n            gig_venue: this.state.gig_venue,\r\n        };\r\n        console.log(obj);\r\n\r\n        // Overwrite the existing data.\r\n        axios.post('http://localhost:4000/gigs/update/' + this.props.match.params.id, obj)\r\n            .then(res => console.log(res.data));\r\n\r\n        // Change the display back to the main page (Gig List).\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Get the gig from the DB based on the given ID and set it to the current state of the page.\r\n        axios.get('http://localhost:4000/gigs/' + this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    gig_or_fest: response.data.gig_or_fest,\r\n                    gig_tourFestName: response.data.gig_tourFestName,\r\n                    gig_bands: response.data.gig_bands,\r\n                    gig_venue: response.data.gig_venue\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form\" id=\"gigFormDiv\">\r\n                <h3>Edit Gig</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"gigOrFestivalRadios\"\r\n                                id=\"gigRadio\"\r\n                                value=\"Gig\"\r\n                                checked={this.state.gig_or_fest === 'Gig'}\r\n                                onChange={this.onChangeGigOrFest}\r\n                            />\r\n                            <label className=\"form-check-label\">Gig</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"gigOrFestivalRadios\"\r\n                                id=\"festivalRadio\"\r\n                                value=\"Festival\"\r\n                                checked={this.state.gig_or_fest === 'Festival'}\r\n                                onChange={this.onChangeGigOrFest}\r\n                            />\r\n                            <label className=\"form-check-label\">Festival</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Tour Name: </label>\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.gig_tourFestName}\r\n                            onChange={this.onChangeGigTourFestName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Bands: </label>\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.gig_bands}\r\n                            onChange={this.onChangeGigBands}\r\n                        />\r\n                        <small id=\"bandHelp\"\r\n                            className=\"form-text text-muted\"\r\n                            style={{ marginTop: 2 }}>\r\n                            Please place each band/artist on a new line.\r\n                                    </small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Venue: </label>\r\n                        <input\r\n                            id=\"venueName\"\r\n                            name=\"venueName\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.gig_venue}\r\n                            onChange={this.onChangeGigVenue}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* <div className=\"form-check\">\r\n                        <input className=\"form-check-input\"\r\n                            id=\"completedCheckbox\"\r\n                            type=\"checkbox\"\r\n                            name=\"completedCheckbox\"\r\n                            onChange={this.onChangeTodoCompleted}\r\n                            checked={this.state.todo_completed}\r\n                            value={this.state.todo_completed}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\r\n                            Cancelled\r\n                        </label>\r\n                    </div>\r\n                    <br /> */}\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Edit Gig\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}