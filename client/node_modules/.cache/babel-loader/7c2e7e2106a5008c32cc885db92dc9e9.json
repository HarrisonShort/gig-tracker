{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\src\\\\components\\\\edit-gig.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class EditGig extends Component {\n  constructor(props) {\n    // Super refers to the parent class' (Component) constructor.\n    // The \"this\" keyword cannot be used until after you have called the parent constructor.\n    super(props);\n\n    this.onSubmit = async event => {\n      event.preventDefault(); // Change any line breaks into a singular string of comma-separated band/artist names.\n\n      this.state.gig_bands = this.state.gig_bands.replace(/[\\n\\r]/g, ', '); // Create a new object containing our updated gig.\n\n      const updatedGig = {\n        gig_or_fest: this.state.gig_or_fest,\n        gig_tourFestName: this.state.gig_tourFestName,\n        gig_bands: this.state.gig_bands,\n        gig_venue: this.state.gig_venue,\n        gig_cancelled: this.state.gig_cancelled\n      };\n      console.log(updatedGig); // Overwrite the existing data using the given ID.\n      // We await here because we want the changes to complete before the user sees the main page again.\n\n      await axios.post('http://localhost:4000/gigs/update/' + this.props.match.params.id, updatedGig).then(res => console.log(res.data)); // Change the display back to the main page (Gig List).\n\n      this.props.history.push('/');\n    };\n\n    this.onChangeGigBands = this.onChangeGigBands.bind(this);\n    this.onChangeGigOrFest = this.onChangeGigOrFest.bind(this);\n    this.onChangeGigTourFestName = this.onChangeGigTourFestName.bind(this);\n    this.onChangeGigVenue = this.onChangeGigVenue.bind(this);\n    this.onChangeGigCancelled = this.onChangeGigCancelled.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      gig_date: '',\n      gig_or_fest: '',\n      gig_tourFestName: '',\n      gig_bands: '',\n      gig_venue: '',\n      gig_cancelled: false\n    };\n  }\n\n  onChangeGigOrFest(event) {\n    this.setState({\n      gig_or_fest: event.target.value\n    });\n  }\n\n  onChangeGigTourFestName(event) {\n    this.setState({\n      gig_tourFestName: event.target.value\n    });\n  }\n\n  onChangeGigBands(event) {\n    this.setState({\n      gig_bands: event.target.value\n    });\n  }\n\n  onChangeGigVenue(event) {\n    this.setState({\n      gig_venue: event.target.value\n    });\n  }\n\n  onChangeGigCancelled(event) {\n    console.log(event.target.value);\n    this.setState({\n      gig_cancelled: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    // Get the gig from the DB based on the given ID and set it to the current state of the page.\n    console.log(this.props.match.params.id);\n    axios.get('http://localhost:4000/gigs/' + this.props.match.params.id).then(response => {\n      this.setState({\n        gig_or_fest: response.data.gig_or_fest,\n        gig_tourFestName: response.data.gig_tourFestName,\n        gig_bands: response.data.gig_bands,\n        gig_venue: response.data.gig_venue,\n        gig_cancelled: response.data.gig_cancelled\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      id: \"gigFormDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Edit Gig\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      name: \"gigOrFestivalRadios\",\n      id: \"gigRadio\",\n      value: \"Gig\",\n      checked: this.state.gig_or_fest === 'Gig',\n      onChange: this.onChangeGigOrFest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, \"Gig\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      name: \"gigOrFestivalRadios\",\n      id: \"festivalRadio\",\n      value: \"Festival\",\n      checked: this.state.gig_or_fest === 'Festival',\n      onChange: this.onChangeGigOrFest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, \"Festival\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, \"Tour Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.gig_tourFestName,\n      onChange: this.onChangeGigTourFestName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \"Bands: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.gig_bands,\n      onChange: this.onChangeGigBands,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"bandHelp\",\n      className: \"form-text text-muted\",\n      style: {\n        marginTop: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, \"Please place each band/artist on a new line.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, \"Venue: \"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"venueName\",\n      name: \"venueName\",\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.gig_venue,\n      onChange: this.onChangeGigVenue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      id: \"gigCancelledCheckbox\",\n      type: \"checkbox\",\n      name: \"gigCancelledCheckbox\",\n      onChange: this.onChangeGigCancelled,\n      checked: true,\n      value: this.state.gig_cancelled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"gigCancelledCheckbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, \"Cancelled\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Edit Gig\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Harrison/Documents/JavaScript Projects/Gig Tracker/src/components/edit-gig.component.js"],"names":["React","Component","axios","EditGig","constructor","props","onSubmit","event","preventDefault","state","gig_bands","replace","updatedGig","gig_or_fest","gig_tourFestName","gig_venue","gig_cancelled","console","log","post","match","params","id","then","res","data","history","push","onChangeGigBands","bind","onChangeGigOrFest","onChangeGigTourFestName","onChangeGigVenue","onChangeGigCancelled","gig_date","setState","target","value","componentDidMount","get","response","catch","error","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class EditGig extends Component {\r\n    constructor(props) {\r\n        // Super refers to the parent class' (Component) constructor.\r\n        // The \"this\" keyword cannot be used until after you have called the parent constructor.\r\n        super(props);\r\n\r\n        this.onChangeGigBands = this.onChangeGigBands.bind(this);\r\n        this.onChangeGigOrFest = this.onChangeGigOrFest.bind(this);\r\n        this.onChangeGigTourFestName = this.onChangeGigTourFestName.bind(this);\r\n        this.onChangeGigVenue = this.onChangeGigVenue.bind(this);\r\n        this.onChangeGigCancelled = this.onChangeGigCancelled.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            gig_date: '',\r\n            gig_or_fest: '',\r\n            gig_tourFestName: '',\r\n            gig_bands: '',\r\n            gig_venue: '',\r\n            gig_cancelled: false\r\n        }\r\n    }\r\n\r\n    onChangeGigOrFest(event) {\r\n        this.setState({\r\n            gig_or_fest: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigTourFestName(event) {\r\n        this.setState({\r\n            gig_tourFestName: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigBands(event) {\r\n        this.setState({\r\n            gig_bands: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigVenue(event) {\r\n        this.setState({\r\n            gig_venue: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigCancelled(event) {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            gig_cancelled: event.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Change any line breaks into a singular string of comma-separated band/artist names.\r\n        this.state.gig_bands = this.state.gig_bands.replace(/[\\n\\r]/g, ', ');\r\n\r\n        // Create a new object containing our updated gig.\r\n        const updatedGig = {\r\n            gig_or_fest: this.state.gig_or_fest,\r\n            gig_tourFestName: this.state.gig_tourFestName,\r\n            gig_bands: this.state.gig_bands,\r\n            gig_venue: this.state.gig_venue,\r\n            gig_cancelled: this.state.gig_cancelled\r\n        };\r\n        console.log(updatedGig);\r\n\r\n        // Overwrite the existing data using the given ID.\r\n        // We await here because we want the changes to complete before the user sees the main page again.\r\n        await axios.post('http://localhost:4000/gigs/update/' + this.props.match.params.id, updatedGig)\r\n            .then(res => console.log(res.data));\r\n\r\n        // Change the display back to the main page (Gig List).\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Get the gig from the DB based on the given ID and set it to the current state of the page.\r\n\r\n        console.log(this.props.match.params.id)\r\n\r\n        axios.get('http://localhost:4000/gigs/' + this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    gig_or_fest: response.data.gig_or_fest,\r\n                    gig_tourFestName: response.data.gig_tourFestName,\r\n                    gig_bands: response.data.gig_bands,\r\n                    gig_venue: response.data.gig_venue,\r\n                    gig_cancelled: response.data.gig_cancelled\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form\" id=\"gigFormDiv\">\r\n                <h3>Edit Gig</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"gigOrFestivalRadios\"\r\n                                id=\"gigRadio\"\r\n                                value=\"Gig\"\r\n                                checked={this.state.gig_or_fest === 'Gig'}\r\n                                onChange={this.onChangeGigOrFest}\r\n                            />\r\n                            <label className=\"form-check-label\">Gig</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"gigOrFestivalRadios\"\r\n                                id=\"festivalRadio\"\r\n                                value=\"Festival\"\r\n                                checked={this.state.gig_or_fest === 'Festival'}\r\n                                onChange={this.onChangeGigOrFest}\r\n                            />\r\n                            <label className=\"form-check-label\">Festival</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Tour Name: </label>\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.gig_tourFestName}\r\n                            onChange={this.onChangeGigTourFestName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Bands: </label>\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.gig_bands}\r\n                            onChange={this.onChangeGigBands}\r\n                        />\r\n                        <small id=\"bandHelp\"\r\n                            className=\"form-text text-muted\"\r\n                            style={{ marginTop: 2 }}>\r\n                            Please place each band/artist on a new line.\r\n                                    </small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Venue: </label>\r\n                        <input\r\n                            id=\"venueName\"\r\n                            name=\"venueName\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.gig_venue}\r\n                            onChange={this.onChangeGigVenue}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\"\r\n                            id=\"gigCancelledCheckbox\"\r\n                            type=\"checkbox\"\r\n                            name=\"gigCancelledCheckbox\"\r\n                            onChange={this.onChangeGigCancelled}\r\n                            checked={true}\r\n                            value={this.state.gig_cancelled}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"gigCancelledCheckbox\">\r\n                            Cancelled\r\n                        </label>\r\n                    </div>\r\n                    <br />\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Edit Gig\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}