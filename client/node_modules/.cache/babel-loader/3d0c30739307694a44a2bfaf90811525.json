{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\src\\\\components\\\\create-gig.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { formatGigDate } from \"../Utils.js\";\nexport default class CreateGig extends Component {\n  constructor(props) {\n    // Super refers to the parent class' (Component) constructor.\n    // The \"this\" keyword cannot be used until after you have called the parent constructor.\n    super(props);\n\n    this.onSubmit = async event => {\n      event.preventDefault(); // Change any line breaks into a singular string of comma-separated band/artist names.\n\n      this.state.gig_bands = this.state.gig_bands.replace(/[\\n\\r]/g, ', ');\n      const newGig = {\n        gig_date: this.formatFinalDate(),\n        gig_or_fest: this.state.gig_or_fest,\n        gig_tourFestName: this.state.gig_tourFestName,\n        gig_bands: this.state.gig_bands,\n        gig_venue: this.state.gig_venue,\n        gig_cancelled: this.state.gig_cancelled\n      }; // Log to the console details of the new gig.\n\n      console.log(`Form submitted:`);\n      console.log(`Date: ${newGig.gig_date}`);\n      console.log(`Gig or Fest?: ${newGig.gig_or_fest}`);\n      console.log(`Tour/Fest Name: ${newGig.gig_tourFestName}`);\n      console.log(`Bands: ${newGig.gig_bands}`);\n      console.log(`Venue: ${newGig.gig_venue}`); // Adds to the DB by posting our created newGig object.\n\n      await axios.post('http://localhost:4000/gigs/create', newGig).then(res => console.log(res.data)); // Reset the state to empty values.\n\n      this.setState({\n        gig_date: Date.now(),\n        gig_or_fest: 'Gig',\n        gig_tourFestName: '',\n        gig_bands: '',\n        gig_venue: '',\n        gig_cancelled: false\n      });\n    };\n\n    this.state = {\n      gig_date: new Date(),\n      festival_end_date: '',\n      gig_or_fest: 'Gig',\n      gig_tourFestName: '',\n      gig_bands: '',\n      gig_venue: '',\n      gig_cancelled: false\n    };\n    this.onChangeGigDate = this.onChangeGigDate.bind(this);\n    this.onChangeFestivalEndDate = this.onChangeFestivalEndDate.bind(this);\n    this.onChangeGigOrFest = this.onChangeGigOrFest.bind(this);\n    this.onChangeGigTourFestName = this.onChangeGigTourFestName.bind(this);\n    this.onChangeGigBands = this.onChangeGigBands.bind(this);\n    this.onChangeGigVenue = this.onChangeGigVenue.bind(this); //this.changeToTourName = this.changeToTourName.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChangeGigDate(event) {\n    this.setState({\n      gig_date: event\n    }, () => {\n      if (this.state.festival_end_date < this.state.gig_date) {\n        this.setState({\n          festival_end_date: this.state.gig_date\n        });\n      }\n    });\n  }\n\n  onChangeFestivalEndDate(event) {\n    if (event < this.state.gig_date) {\n      // TODO: Show some sort of error UI.\n      console.log('onChangeFestivalEndDate: End Date cannot be earlier than initial Date.');\n      return;\n    }\n\n    this.setState({\n      festival_end_date: event\n    });\n  }\n\n  onChangeGigOrFest(event) {\n    this.setState({\n      gig_or_fest: event.target.value\n    }, () => {\n      if (this.state.gig_or_fest === 'Festival') {\n        this.setState({\n          festival_end_date: this.state.gig_date\n        });\n      }\n    });\n  }\n\n  onChangeGigTourFestName(event) {\n    this.setState({\n      gig_tourFestName: event.target.value\n    });\n  }\n\n  onChangeGigBands(event) {\n    this.setState({\n      gig_bands: event.target.value\n    });\n  }\n\n  onChangeGigVenue(event) {\n    this.setState({\n      gig_venue: event.target.value\n    });\n  }\n\n  formatFinalDate() {\n    let date = formatGigDate(this.state.gig_date);\n\n    if (this.state.festival_end_date != undefined) {\n      let end_date = formatGigDate(this.state.festival_end_date);\n      date += ' - ' + end_date;\n    }\n\n    return date;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      id: \"gigFormDiv\",\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"dateHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.gig_date,\n      dateFormat: \"d MMMM yyyy\",\n      onChange: this.onChangeGigDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }), this.state.gig_or_fest === 'Festival' ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"endDateHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.festival_end_date,\n      dateFormat: \"d MMMM yyyy\",\n      onChange: this.onChangeFestivalEndDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"gigForm\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      name: \"gigOrFestivalRadios\",\n      id: \"gigRadio\",\n      value: \"Gig\",\n      checked: this.state.gig_or_fest === 'Gig',\n      onChange: this.onChangeGigOrFest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }, \"Gig\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      name: \"gigOrFestivalRadios\",\n      id: \"festivalRadio\",\n      value: \"Festival\",\n      checked: this.state.gig_or_fest === 'Festival',\n      onChange: this.onChangeGigOrFest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }, \"Festival\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, \"Tour Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"tourName\",\n      name: \"tourName\",\n      value: this.state.gig_tourFestName,\n      onChange: this.onChangeGigTourFestName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 33\n      }\n    }, \"Bands:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"bands\",\n      name: \"bands\",\n      value: this.state.gig_bands,\n      onChange: this.onChangeGigBands,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"bandHelp\",\n      className: \"form-text text-muted\",\n      style: {\n        marginTop: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 33\n      }\n    }, \"Please place each band/artist on a new line.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    }, \"Venue:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"venueName\",\n      name: \"venueName\",\n      value: this.state.gig_venue,\n      onChange: this.onChangeGigVenue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Create Gig\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 33\n      }\n    }, \"Create Gig\"))))));\n  }\n\n} // <button className=\"btn btn-primary\" onClick={this.changeToTourName(true)}>Reset</button>","map":{"version":3,"sources":["C:/Users/Harrison/Documents/JavaScript Projects/Gig Tracker/src/components/create-gig.component.js"],"names":["React","Component","axios","DatePicker","formatGigDate","CreateGig","constructor","props","onSubmit","event","preventDefault","state","gig_bands","replace","newGig","gig_date","formatFinalDate","gig_or_fest","gig_tourFestName","gig_venue","gig_cancelled","console","log","post","then","res","data","setState","Date","now","festival_end_date","onChangeGigDate","bind","onChangeFestivalEndDate","onChangeGigOrFest","onChangeGigTourFestName","onChangeGigBands","onChangeGigVenue","target","value","date","undefined","end_date","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { formatGigDate } from \"../Utils.js\";\r\n\r\nexport default class CreateGig extends Component {\r\n    constructor(props) {\r\n        // Super refers to the parent class' (Component) constructor.\r\n        // The \"this\" keyword cannot be used until after you have called the parent constructor.\r\n        super(props);\r\n\r\n        this.state = {\r\n            gig_date: new Date(),\r\n            festival_end_date: '',\r\n            gig_or_fest: 'Gig',\r\n            gig_tourFestName: '',\r\n            gig_bands: '',\r\n            gig_venue: '',\r\n            gig_cancelled: false\r\n        }\r\n\r\n        this.onChangeGigDate = this.onChangeGigDate.bind(this);\r\n        this.onChangeFestivalEndDate = this.onChangeFestivalEndDate.bind(this);\r\n        this.onChangeGigOrFest = this.onChangeGigOrFest.bind(this);\r\n        this.onChangeGigTourFestName = this.onChangeGigTourFestName.bind(this);\r\n        this.onChangeGigBands = this.onChangeGigBands.bind(this);\r\n        this.onChangeGigVenue = this.onChangeGigVenue.bind(this);\r\n        //this.changeToTourName = this.changeToTourName.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChangeGigDate(event) {\r\n        this.setState({\r\n            gig_date: event\r\n        }, () => {\r\n            if (this.state.festival_end_date < this.state.gig_date) {\r\n                this.setState({\r\n                    festival_end_date: this.state.gig_date\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangeFestivalEndDate(event) {\r\n        if (event < this.state.gig_date) {\r\n            // TODO: Show some sort of error UI.\r\n            console.log('onChangeFestivalEndDate: End Date cannot be earlier than initial Date.');\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            festival_end_date: event\r\n        });\r\n    }\r\n\r\n    onChangeGigOrFest(event) {\r\n        this.setState({\r\n            gig_or_fest: event.target.value\r\n        }, () => {\r\n            if (this.state.gig_or_fest === 'Festival') {\r\n                this.setState({\r\n                    festival_end_date: this.state.gig_date\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangeGigTourFestName(event) {\r\n        this.setState({\r\n            gig_tourFestName: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigBands(event) {\r\n        this.setState({\r\n            gig_bands: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigVenue(event) {\r\n        this.setState({\r\n            gig_venue: event.target.value\r\n        });\r\n    }\r\n\r\n    formatFinalDate() {\r\n        let date = formatGigDate(this.state.gig_date);\r\n\r\n        if (this.state.festival_end_date != undefined) {\r\n            let end_date = formatGigDate(this.state.festival_end_date);\r\n            date += ' - ' + end_date;\r\n        }\r\n\r\n        return date;\r\n    }\r\n\r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Change any line breaks into a singular string of comma-separated band/artist names.\r\n        this.state.gig_bands = this.state.gig_bands.replace(/[\\n\\r]/g, ', ');\r\n\r\n\r\n\r\n        const newGig = {\r\n            gig_date: this.formatFinalDate(),\r\n            gig_or_fest: this.state.gig_or_fest,\r\n            gig_tourFestName: this.state.gig_tourFestName,\r\n            gig_bands: this.state.gig_bands,\r\n            gig_venue: this.state.gig_venue,\r\n            gig_cancelled: this.state.gig_cancelled\r\n        }\r\n\r\n        // Log to the console details of the new gig.\r\n        console.log(`Form submitted:`);\r\n        console.log(`Date: ${newGig.gig_date}`);\r\n        console.log(`Gig or Fest?: ${newGig.gig_or_fest}`);\r\n        console.log(`Tour/Fest Name: ${newGig.gig_tourFestName}`);\r\n        console.log(`Bands: ${newGig.gig_bands}`);\r\n        console.log(`Venue: ${newGig.gig_venue}`);\r\n\r\n        // Adds to the DB by posting our created newGig object.\r\n        await axios.post('http://localhost:4000/gigs/create', newGig)\r\n            .then(res => console.log(res.data));\r\n\r\n        // Reset the state to empty values.\r\n        this.setState({\r\n            gig_date: Date.now(),\r\n            gig_or_fest: 'Gig',\r\n            gig_tourFestName: '',\r\n            gig_bands: '',\r\n            gig_venue: '',\r\n            gig_cancelled: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form\" id=\"gigFormDiv\" style={{ marginTop: 30 }} >\r\n                <h4 id=\"dateHeader\">Date</h4>\r\n                <DatePicker\r\n                    selected={this.state.gig_date}\r\n                    dateFormat={\"d MMMM yyyy\"}\r\n                    onChange={this.onChangeGigDate}\r\n                />\r\n                {this.state.gig_or_fest === 'Festival' ?\r\n                    <div style={{ marginTop: 30 }}>\r\n                        <h4 id=\"endDateHeader\">End Date</h4>\r\n                        <DatePicker\r\n                            selected={this.state.festival_end_date}\r\n                            dateFormat={\"d MMMM yyyy\"}\r\n                            onChange={this.onChangeFestivalEndDate}\r\n                        />\r\n                    </div>\r\n                    : null}\r\n                <form id=\"gigForm\" onSubmit={this.onSubmit}>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <div style={{ marginTop: 15 }}>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"gigOrFestivalRadios\"\r\n                                        id=\"gigRadio\"\r\n                                        value=\"Gig\"\r\n                                        checked={this.state.gig_or_fest === 'Gig'}\r\n                                        onChange={this.onChangeGigOrFest}\r\n                                    />\r\n                                    <label className=\"form-check-label\">Gig</label>\r\n                                </div>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"gigOrFestivalRadios\"\r\n                                        id=\"festivalRadio\"\r\n                                        value=\"Festival\"\r\n                                        checked={this.state.gig_or_fest === 'Festival'}\r\n                                        onChange={this.onChangeGigOrFest}\r\n                                    />\r\n                                    <label className=\"form-check-label\">Festival</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Tour Name:</label>\r\n                                <input type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"tourName\"\r\n                                    name=\"tourName\"\r\n                                    value={this.state.gig_tourFestName}\r\n                                    onChange={this.onChangeGigTourFestName}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Bands:</label>\r\n                                <textarea className=\"form-control\"\r\n                                    id=\"bands\"\r\n                                    name=\"bands\"\r\n                                    value={this.state.gig_bands}\r\n                                    onChange={this.onChangeGigBands}\r\n                                />\r\n                                <small id=\"bandHelp\"\r\n                                    className=\"form-text text-muted\"\r\n                                    style={{ marginTop: 2 }}>\r\n                                    Please place each band/artist on a new line.\r\n                                    </small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Venue:</label>\r\n                                <input type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"venueName\"\r\n                                    name=\"venueName\"\r\n                                    value={this.state.gig_venue}\r\n                                    onChange={this.onChangeGigVenue}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" value=\"Create Gig\" className=\"btn btn-primary\">Create Gig</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n// <button className=\"btn btn-primary\" onClick={this.changeToTourName(true)}>Reset</button>"]},"metadata":{},"sourceType":"module"}