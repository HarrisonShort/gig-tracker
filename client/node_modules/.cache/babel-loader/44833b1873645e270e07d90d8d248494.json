{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Link}from'react-router-dom';import axios from'axios';var Gig=function Gig(props){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:props.gig.gig_cancelled?'cancelled':''},props.gig.gig_date),/*#__PURE__*/React.createElement(\"td\",{className:props.gig.gig_cancelled?'cancelled':''},props.gig.gig_or_fest),/*#__PURE__*/React.createElement(\"td\",{className:props.gig.gig_cancelled?'cancelled':''},props.gig.gig_tourFestName),/*#__PURE__*/React.createElement(\"td\",{className:props.gig.gig_cancelled?'cancelled':''},props.gig.gig_bands),/*#__PURE__*/React.createElement(\"td\",{className:props.gig.gig_cancelled?'cancelled':''},props.gig.gig_venue),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Link,{to:\"/gig-tracker/edit/\"+props.gig._id},\"Edit\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Link,{to:\"/\",onClick:function onClick(){if(window.confirm(\"Are you sure you wish to delete this gig? (\".concat(props.gig.gig_tourFestName,\")\"))){window.location.href=\"/gig-tracker/delete/\"+props.gig._id;}}},\"Delete\")));};var GigList=/*#__PURE__*/function(_Component){_inherits(GigList,_Component);var _super=_createSuper(GigList);function GigList(props){var _this;_classCallCheck(this,GigList);_this=_super.call(this,props);_this.state={gigs:[]};return _this;}_createClass(GigList,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;// Get the list of gigs from the database and assigns the data to the component state.\naxios.get('http://localhost:4000/gigs/').then(function(response){_this2.setState({gigs:response.data});}).catch(function(error){console.log(error);});}},{key:\"gigList\",value:function gigList(){// Sort gigs chronologically.\nvar chronologicalGigs=this.state.gigs.sort(function(a,b){return new Date(a.gig_date.split(\" - \")[0])-new Date(b.gig_date.split(\" - \")[0]);});// Map each gig in the list so that the information is displayed across each row.\nreturn chronologicalGigs.map(function(currentGig,i){return/*#__PURE__*/React.createElement(Gig,{gig:currentGig,key:i});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Gig List\"),/*#__PURE__*/React.createElement(\"table\",{className:\"table table-striped\",style:{marginTop:20}},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Date\"),/*#__PURE__*/React.createElement(\"th\",null,\"Gig/Festival\"),/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'35%'}},\"Bands\"),/*#__PURE__*/React.createElement(\"th\",null,\"Venue\"),/*#__PURE__*/React.createElement(\"th\",null),/*#__PURE__*/React.createElement(\"th\",null))),/*#__PURE__*/React.createElement(\"tbody\",null,this.gigList())));}}]);return GigList;}(Component);export{GigList as default};","map":{"version":3,"sources":["C:/Users/Harrison/Documents/JavaScript Projects/Gig Tracker/src/components/gig-list.component.js"],"names":["React","Component","Link","axios","Gig","props","gig","gig_cancelled","gig_date","gig_or_fest","gig_tourFestName","gig_bands","gig_venue","_id","window","confirm","location","href","GigList","state","gigs","get","then","response","setState","data","catch","error","console","log","chronologicalGigs","sort","a","b","Date","split","map","currentGig","i","marginTop","width","gigList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Gig = props => (\r\n    <tr>\r\n        <td className={props.gig.gig_cancelled ? 'cancelled' : ''}>{props.gig.gig_date}</td>\r\n        <td className={props.gig.gig_cancelled ? 'cancelled' : ''}>{props.gig.gig_or_fest}</td>\r\n        <td className={props.gig.gig_cancelled ? 'cancelled' : ''}>{props.gig.gig_tourFestName}</td>\r\n        <td className={props.gig.gig_cancelled ? 'cancelled' : ''}>{props.gig.gig_bands}</td>\r\n        <td className={props.gig.gig_cancelled ? 'cancelled' : ''}>{props.gig.gig_venue}</td>\r\n        <td>\r\n            <Link to={\"/gig-tracker/edit/\" + props.gig._id}>Edit</Link>\r\n        </td>\r\n        <td>\r\n            <Link to='/' onClick={() => {\r\n                if (window.confirm(`Are you sure you wish to delete this gig? (${props.gig.gig_tourFestName})`)) {\r\n                    window.location.href = \"/gig-tracker/delete/\" + props.gig._id;\r\n                }\r\n            }}>Delete</Link>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default class GigList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { gigs: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Get the list of gigs from the database and assigns the data to the component state.\r\n        axios.get('http://localhost:4000/gigs/')\r\n            .then(response => {\r\n                this.setState({ gigs: response.data });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    gigList() {\r\n        // Sort gigs chronologically.\r\n        let chronologicalGigs = this.state.gigs.sort((a, b) => new Date(a.gig_date.split(\" - \")[0]) - new Date(b.gig_date.split(\" - \")[0]));\r\n\r\n        // Map each gig in the list so that the information is displayed across each row.\r\n        return chronologicalGigs.map(function (currentGig, i) {\r\n            return <Gig gig={currentGig} key={i} />;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Gig List</h3>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20 }} >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date</th>\r\n                            <th>Gig/Festival</th>\r\n                            <th>Name</th>\r\n                            <th style={{ width: '35%' }}>Bands</th>\r\n                            <th>Venue</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.gigList()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}