{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import axios from'axios';import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import*as utils from\"../Utils.js\";var CreateGig=/*#__PURE__*/function(_Component){_inherits(CreateGig,_Component);var _super=_createSuper(CreateGig);function CreateGig(props){var _this;_classCallCheck(this,CreateGig);// Super refers to the parent class' (Component) constructor.\n// The \"this\" keyword cannot be used until after you have called the parent constructor.\n_this=_super.call(this,props);_this.onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var newGig;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();// Change any line breaks into a singular string of comma-separated band/artist names.\n_this.state.gig_bands=_this.state.gig_bands.replace(/[\\n\\r]/g,', ');newGig={gig_date:utils.formatFinalDate(_this.state.gig_date,_this.state.festival_end_date),gig_or_fest:_this.state.gig_or_fest,gig_tourFestName:_this.state.gig_tourFestName,gig_bands:_this.state.gig_bands,gig_venue:_this.state.gig_venue,gig_cancelled:_this.state.gig_cancelled};// Log to the console details of the new gig.\nconsole.log(\"Form submitted:\");console.log(\"Date: \".concat(newGig.gig_date));console.log(\"Gig or Fest?: \".concat(newGig.gig_or_fest));console.log(\"Tour/Fest Name: \".concat(newGig.gig_tourFestName));console.log(\"Bands: \".concat(newGig.gig_bands));console.log(\"Venue: \".concat(newGig.gig_venue));// Adds to the DB by posting our created newGig object.\n_context.next=11;return axios.post('http://localhost:4000/gigs/create',newGig).then(function(res){return console.log(res.data);});case 11:// Reset the state to empty values.\n_this.setState({gig_date:new Date(),festival_end_date:'',gig_or_fest:'Gig',gig_tourFestName:'',gig_bands:'',gig_venue:'',gig_cancelled:false});case 12:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={gig_date:new Date(),festival_end_date:'',gig_or_fest:'Gig',gig_tourFestName:'',gig_bands:'',gig_venue:'',gig_cancelled:false};_this.onChangeGigDate=_this.onChangeGigDate.bind(_assertThisInitialized(_this));_this.onChangeFestivalEndDate=_this.onChangeFestivalEndDate.bind(_assertThisInitialized(_this));_this.onChangeGigOrFest=_this.onChangeGigOrFest.bind(_assertThisInitialized(_this));_this.onChangeGigTourFestName=_this.onChangeGigTourFestName.bind(_assertThisInitialized(_this));_this.onChangeGigBands=_this.onChangeGigBands.bind(_assertThisInitialized(_this));_this.onChangeGigVenue=_this.onChangeGigVenue.bind(_assertThisInitialized(_this));//this.changeToTourName = this.changeToTourName.bind(this);\n_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(CreateGig,[{key:\"onChangeGigDate\",value:function onChangeGigDate(event){var _this2=this;this.setState({gig_date:event},function(){if(_this2.state.festival_end_date<_this2.state.gig_date){_this2.setState({festival_end_date:_this2.state.gig_date});}});}},{key:\"onChangeFestivalEndDate\",value:function onChangeFestivalEndDate(event){if(event<this.state.gig_date){// TODO: Show some sort of error UI.\nconsole.log('onChangeFestivalEndDate: End Date cannot be earlier than initial Date.');return;}this.setState({festival_end_date:event});}},{key:\"onChangeGigOrFest\",value:function onChangeGigOrFest(event){var _this3=this;this.setState({gig_or_fest:event.target.value},function(){if(_this3.state.gig_or_fest==='Festival'){_this3.setState({festival_end_date:_this3.state.gig_date});}});}},{key:\"onChangeGigTourFestName\",value:function onChangeGigTourFestName(event){this.setState({gig_tourFestName:event.target.value});}},{key:\"onChangeGigBands\",value:function onChangeGigBands(event){this.setState({gig_bands:event.target.value});}},{key:\"onChangeGigVenue\",value:function onChangeGigVenue(event){this.setState({gig_venue:event.target.value});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"form\",id:\"gigFormDiv\",style:{marginTop:30}},/*#__PURE__*/React.createElement(\"h4\",{id:\"dateHeader\"},\"Date\"),/*#__PURE__*/React.createElement(DatePicker,{selected:this.state.gig_date,dateFormat:\"d MMMM yyyy\",onChange:this.onChangeGigDate}),this.state.gig_or_fest==='Festival'?/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:30}},/*#__PURE__*/React.createElement(\"h4\",{id:\"endDateHeader\"},\"End Date\"),/*#__PURE__*/React.createElement(DatePicker,{selected:this.state.festival_end_date,dateFormat:\"d MMMM yyyy\",onChange:this.onChangeFestivalEndDate})):null,/*#__PURE__*/React.createElement(\"form\",{id:\"gigForm\",onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-check form-check-inline\"},/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:15}},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-check form-check-inline\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"gigOrFestivalRadios\",id:\"gigRadio\",value:\"Gig\",checked:this.state.gig_or_fest==='Gig',onChange:this.onChangeGigOrFest}),/*#__PURE__*/React.createElement(\"label\",{className:\"form-check-label\"},\"Gig\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-check form-check-inline\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"gigOrFestivalRadios\",id:\"festivalRadio\",value:\"Festival\",checked:this.state.gig_or_fest==='Festival',onChange:this.onChangeGigOrFest}),/*#__PURE__*/React.createElement(\"label\",{className:\"form-check-label\"},\"Festival\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Tour Name:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"tourName\",name:\"tourName\",value:this.state.gig_tourFestName,onChange:this.onChangeGigTourFestName})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Bands:\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"form-control\",id:\"bands\",name:\"bands\",value:this.state.gig_bands,onChange:this.onChangeGigBands}),/*#__PURE__*/React.createElement(\"small\",{id:\"bandHelp\",className:\"form-text text-muted\",style:{marginTop:2}},\"Please place each band/artist on a new line.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Venue:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"venueName\",name:\"venueName\",value:this.state.gig_venue,onChange:this.onChangeGigVenue})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",value:\"Create Gig\",className:\"btn btn-primary\"},\"Create Gig\"))))));}}]);return CreateGig;}(Component);// <button className=\"btn btn-primary\" onClick={this.changeToTourName(true)}>Reset</button>\nexport{CreateGig as default};","map":{"version":3,"sources":["C:/Users/Harrison/Documents/JavaScript Projects/Gig Tracker/src/components/create-gig.component.js"],"names":["React","Component","axios","DatePicker","utils","CreateGig","props","onSubmit","event","preventDefault","state","gig_bands","replace","newGig","gig_date","formatFinalDate","festival_end_date","gig_or_fest","gig_tourFestName","gig_venue","gig_cancelled","console","log","post","then","res","data","setState","Date","onChangeGigDate","bind","onChangeFestivalEndDate","onChangeGigOrFest","onChangeGigTourFestName","onChangeGigBands","onChangeGigVenue","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport * as utils from \"../Utils.js\";\r\n\r\nexport default class CreateGig extends Component {\r\n    constructor(props) {\r\n        // Super refers to the parent class' (Component) constructor.\r\n        // The \"this\" keyword cannot be used until after you have called the parent constructor.\r\n        super(props);\r\n\r\n        this.state = {\r\n            gig_date: new Date(),\r\n            festival_end_date: '',\r\n            gig_or_fest: 'Gig',\r\n            gig_tourFestName: '',\r\n            gig_bands: '',\r\n            gig_venue: '',\r\n            gig_cancelled: false\r\n        }\r\n\r\n        this.onChangeGigDate = this.onChangeGigDate.bind(this);\r\n        this.onChangeFestivalEndDate = this.onChangeFestivalEndDate.bind(this);\r\n        this.onChangeGigOrFest = this.onChangeGigOrFest.bind(this);\r\n        this.onChangeGigTourFestName = this.onChangeGigTourFestName.bind(this);\r\n        this.onChangeGigBands = this.onChangeGigBands.bind(this);\r\n        this.onChangeGigVenue = this.onChangeGigVenue.bind(this);\r\n        //this.changeToTourName = this.changeToTourName.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChangeGigDate(event) {\r\n        this.setState({\r\n            gig_date: event\r\n        }, () => {\r\n            if (this.state.festival_end_date < this.state.gig_date) {\r\n                this.setState({\r\n                    festival_end_date: this.state.gig_date\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangeFestivalEndDate(event) {\r\n        if (event < this.state.gig_date) {\r\n            // TODO: Show some sort of error UI.\r\n            console.log('onChangeFestivalEndDate: End Date cannot be earlier than initial Date.');\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            festival_end_date: event\r\n        });\r\n    }\r\n\r\n    onChangeGigOrFest(event) {\r\n        this.setState({\r\n            gig_or_fest: event.target.value\r\n        }, () => {\r\n            if (this.state.gig_or_fest === 'Festival') {\r\n                this.setState({\r\n                    festival_end_date: this.state.gig_date\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangeGigTourFestName(event) {\r\n        this.setState({\r\n            gig_tourFestName: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigBands(event) {\r\n        this.setState({\r\n            gig_bands: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigVenue(event) {\r\n        this.setState({\r\n            gig_venue: event.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Change any line breaks into a singular string of comma-separated band/artist names.\r\n        this.state.gig_bands = this.state.gig_bands.replace(/[\\n\\r]/g, ', ');\r\n\r\n        const newGig = {\r\n            gig_date: utils.formatFinalDate(this.state.gig_date, this.state.festival_end_date),\r\n            gig_or_fest: this.state.gig_or_fest,\r\n            gig_tourFestName: this.state.gig_tourFestName,\r\n            gig_bands: this.state.gig_bands,\r\n            gig_venue: this.state.gig_venue,\r\n            gig_cancelled: this.state.gig_cancelled\r\n        }\r\n\r\n        // Log to the console details of the new gig.\r\n        console.log(`Form submitted:`);\r\n        console.log(`Date: ${newGig.gig_date}`);\r\n        console.log(`Gig or Fest?: ${newGig.gig_or_fest}`);\r\n        console.log(`Tour/Fest Name: ${newGig.gig_tourFestName}`);\r\n        console.log(`Bands: ${newGig.gig_bands}`);\r\n        console.log(`Venue: ${newGig.gig_venue}`);\r\n\r\n        // Adds to the DB by posting our created newGig object.\r\n        await axios.post('http://localhost:4000/gigs/create', newGig)\r\n            .then(res => console.log(res.data));\r\n\r\n        // Reset the state to empty values.\r\n        this.setState({\r\n            gig_date: new Date(),\r\n            festival_end_date: '',\r\n            gig_or_fest: 'Gig',\r\n            gig_tourFestName: '',\r\n            gig_bands: '',\r\n            gig_venue: '',\r\n            gig_cancelled: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form\" id=\"gigFormDiv\" style={{ marginTop: 30 }} >\r\n                <h4 id=\"dateHeader\">Date</h4>\r\n                <DatePicker\r\n                    selected={this.state.gig_date}\r\n                    dateFormat={\"d MMMM yyyy\"}\r\n                    onChange={this.onChangeGigDate}\r\n                />\r\n                {this.state.gig_or_fest === 'Festival' ?\r\n                    <div style={{ marginTop: 30 }}>\r\n                        <h4 id=\"endDateHeader\">End Date</h4>\r\n                        <DatePicker\r\n                            selected={this.state.festival_end_date}\r\n                            dateFormat={\"d MMMM yyyy\"}\r\n                            onChange={this.onChangeFestivalEndDate}\r\n                        />\r\n                    </div>\r\n                    : null}\r\n                <form id=\"gigForm\" onSubmit={this.onSubmit}>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <div style={{ marginTop: 15 }}>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"gigOrFestivalRadios\"\r\n                                        id=\"gigRadio\"\r\n                                        value=\"Gig\"\r\n                                        checked={this.state.gig_or_fest === 'Gig'}\r\n                                        onChange={this.onChangeGigOrFest}\r\n                                    />\r\n                                    <label className=\"form-check-label\">Gig</label>\r\n                                </div>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"gigOrFestivalRadios\"\r\n                                        id=\"festivalRadio\"\r\n                                        value=\"Festival\"\r\n                                        checked={this.state.gig_or_fest === 'Festival'}\r\n                                        onChange={this.onChangeGigOrFest}\r\n                                    />\r\n                                    <label className=\"form-check-label\">Festival</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Tour Name:</label>\r\n                                <input type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"tourName\"\r\n                                    name=\"tourName\"\r\n                                    value={this.state.gig_tourFestName}\r\n                                    onChange={this.onChangeGigTourFestName}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Bands:</label>\r\n                                <textarea className=\"form-control\"\r\n                                    id=\"bands\"\r\n                                    name=\"bands\"\r\n                                    value={this.state.gig_bands}\r\n                                    onChange={this.onChangeGigBands}\r\n                                />\r\n                                <small id=\"bandHelp\"\r\n                                    className=\"form-text text-muted\"\r\n                                    style={{ marginTop: 2 }}>\r\n                                    Please place each band/artist on a new line.\r\n                                    </small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Venue:</label>\r\n                                <input type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"venueName\"\r\n                                    name=\"venueName\"\r\n                                    value={this.state.gig_venue}\r\n                                    onChange={this.onChangeGigVenue}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" value=\"Create Gig\" className=\"btn btn-primary\">Create Gig</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n// <button className=\"btn btn-primary\" onClick={this.changeToTourName(true)}>Reset</button>"]},"metadata":{},"sourceType":"module"}