{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harrison\\\\Documents\\\\JavaScript Projects\\\\Gig Tracker\\\\src\\\\components\\\\create-gig.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class CreateGig extends Component {\n  constructor(props) {\n    // Super refers to the parent class' (Component) constructor.\n    // The \"this\" keyword cannot be used until after you have called the parent constructor.\n    super(props);\n\n    this.onSubmit = async event => {\n      event.preventDefault(); // Change any line breaks into a singular string of comma-separated band/artist names.\n\n      this.state.gig_bands = this.state.gig_bands.replace(/[\\n\\r]/g, ', '); // Log to the console details of the new gig.\n\n      console.log(`Form submitted:`);\n      console.log(`Date: ${this.state.gig_date}`);\n      console.log(`Gig or Fest?: ${this.state.gig_or_fest}`);\n      console.log(`Tour/Fest Name: ${this.state.gig_tourFestName}`);\n      console.log(`Bands: ${this.state.gig_bands}`);\n      console.log(`Venue: ${this.state.gig_venue}`);\n      const newGig = {\n        gig_date: this.state.gig_date,\n        gig_or_fest: this.state.gig_or_fest,\n        gig_tourFestName: this.state.gig_tourFestName,\n        gig_bands: this.state.gig_bands,\n        gig_venue: this.state.gig_venue,\n        gig_cancelled: this.state.gig_cancelled\n      }; // Adds to the DB by posting our created newGig object.\n\n      await axios.post('http://localhost:4000/gigs/create', newGig).then(res => console.log(res.data)); // Reset the state to empty values.\n\n      this.setState({\n        gig_date: '',\n        gig_or_fest: 'Gig',\n        gig_tourFestName: '',\n        gig_bands: '',\n        gig_venue: '',\n        gig_cancelled: false\n      });\n    };\n\n    this.state = {\n      gig_date: '',\n      gig_or_fest: 'Gig',\n      gig_tourFestName: '',\n      gig_bands: '',\n      gig_venue: '',\n      gig_cancelled: false\n    };\n    this.onChangeGigDate = this.onChangeGigDate.bind(this);\n    this.onChangeGigOrFest = this.onChangeGigOrFest.bind(this);\n    this.onChangeGigTourFestName = this.onChangeGigTourFestName.bind(this);\n    this.onChangeGigBands = this.onChangeGigBands.bind(this);\n    this.onChangeGigVenue = this.onChangeGigVenue.bind(this); //this.changeToTourName = this.changeToTourName.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChangeGigDate(event) {\n    console.log(event); // this.setState({\n    //     gig_date: event.target.value\n    // });\n  }\n\n  onChangeGigOrFest(event) {\n    this.setState({\n      gig_or_fest: event.target.value\n    });\n  }\n\n  onChangeGigTourFestName(event) {\n    this.setState({\n      gig_tourFestName: event.target.value\n    });\n  }\n\n  onChangeGigBands(event) {\n    this.setState({\n      gig_bands: event.target.value\n    });\n  }\n\n  onChangeGigVenue(event) {\n    this.setState({\n      gig_venue: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      id: \"gigFormDiv\",\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"dateHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: Date.now(),\n      onChange: this.onChangeGigDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      id: \"gigForm\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      name: \"gigOrFestivalRadios\",\n      id: \"gigRadio\",\n      value: \"Gig\",\n      checked: this.state.gig_or_fest === 'Gig',\n      onChange: this.onChangeGigOrFest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, \"Gig\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      name: \"gigOrFestivalRadios\",\n      id: \"festivalRadio\",\n      value: \"Festival\",\n      checked: this.state.gig_or_fest === 'Festival',\n      onChange: this.onChangeGigOrFest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, \"Festival\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, \"Tour Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"tourName\",\n      name: \"tourName\",\n      value: this.state.gig_tourFestName,\n      onChange: this.onChangeGigTourFestName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, \"Bands:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"bands\",\n      name: \"bands\",\n      value: this.state.gig_bands,\n      onChange: this.onChangeGigBands,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"bandHelp\",\n      className: \"form-text text-muted\",\n      style: {\n        marginTop: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, \"Please place each band/artist on a new line.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, \"Venue:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"venueName\",\n      name: \"venueName\",\n      value: this.state.gig_venue,\n      onChange: this.onChangeGigVenue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Create Gig\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 33\n      }\n    }, \"Create Gig\"))))));\n  }\n\n} // <button className=\"btn btn-primary\" onClick={this.changeToTourName(true)}>Reset</button>","map":{"version":3,"sources":["C:/Users/Harrison/Documents/JavaScript Projects/Gig Tracker/src/components/create-gig.component.js"],"names":["React","Component","axios","DatePicker","CreateGig","constructor","props","onSubmit","event","preventDefault","state","gig_bands","replace","console","log","gig_date","gig_or_fest","gig_tourFestName","gig_venue","newGig","gig_cancelled","post","then","res","data","setState","onChangeGigDate","bind","onChangeGigOrFest","onChangeGigTourFestName","onChangeGigBands","onChangeGigVenue","target","value","render","marginTop","Date","now"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class CreateGig extends Component {\r\n    constructor(props) {\r\n        // Super refers to the parent class' (Component) constructor.\r\n        // The \"this\" keyword cannot be used until after you have called the parent constructor.\r\n        super(props);\r\n\r\n        this.state = {\r\n            gig_date: '',\r\n            gig_or_fest: 'Gig',\r\n            gig_tourFestName: '',\r\n            gig_bands: '',\r\n            gig_venue: '',\r\n            gig_cancelled: false\r\n        }\r\n\r\n        this.onChangeGigDate = this.onChangeGigDate.bind(this);\r\n        this.onChangeGigOrFest = this.onChangeGigOrFest.bind(this);\r\n        this.onChangeGigTourFestName = this.onChangeGigTourFestName.bind(this);\r\n        this.onChangeGigBands = this.onChangeGigBands.bind(this);\r\n        this.onChangeGigVenue = this.onChangeGigVenue.bind(this);\r\n        //this.changeToTourName = this.changeToTourName.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChangeGigDate(event) {\r\n        console.log(event);\r\n\r\n        // this.setState({\r\n        //     gig_date: event.target.value\r\n        // });\r\n    }\r\n\r\n    onChangeGigOrFest(event) {\r\n        this.setState({\r\n            gig_or_fest: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigTourFestName(event) {\r\n        this.setState({\r\n            gig_tourFestName: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigBands(event) {\r\n        this.setState({\r\n            gig_bands: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGigVenue(event) {\r\n        this.setState({\r\n            gig_venue: event.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Change any line breaks into a singular string of comma-separated band/artist names.\r\n        this.state.gig_bands = this.state.gig_bands.replace(/[\\n\\r]/g, ', ');\r\n\r\n        // Log to the console details of the new gig.\r\n        console.log(`Form submitted:`);\r\n        console.log(`Date: ${this.state.gig_date}`);\r\n        console.log(`Gig or Fest?: ${this.state.gig_or_fest}`);\r\n        console.log(`Tour/Fest Name: ${this.state.gig_tourFestName}`);\r\n        console.log(`Bands: ${this.state.gig_bands}`);\r\n        console.log(`Venue: ${this.state.gig_venue}`);\r\n\r\n        const newGig = {\r\n            gig_date: this.state.gig_date,\r\n            gig_or_fest: this.state.gig_or_fest,\r\n            gig_tourFestName: this.state.gig_tourFestName,\r\n            gig_bands: this.state.gig_bands,\r\n            gig_venue: this.state.gig_venue,\r\n            gig_cancelled: this.state.gig_cancelled\r\n        }\r\n\r\n        // Adds to the DB by posting our created newGig object.\r\n        await axios.post('http://localhost:4000/gigs/create', newGig)\r\n            .then(res => console.log(res.data));\r\n\r\n        // Reset the state to empty values.\r\n        this.setState({\r\n            gig_date: '',\r\n            gig_or_fest: 'Gig',\r\n            gig_tourFestName: '',\r\n            gig_bands: '',\r\n            gig_venue: '',\r\n            gig_cancelled: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form\" id=\"gigFormDiv\" style={{ marginTop: 30 }} >\r\n                <h3 id=\"dateHeader\">Date</h3>\r\n                <DatePicker\r\n                    selected={Date.now()}\r\n                    onChange={this.onChangeGigDate}\r\n                />\r\n                <form id=\"gigForm\" onSubmit={this.onSubmit}>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <div style={{ marginTop: 15 }}>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"gigOrFestivalRadios\"\r\n                                        id=\"gigRadio\"\r\n                                        value=\"Gig\"\r\n                                        checked={this.state.gig_or_fest === 'Gig'}\r\n                                        onChange={this.onChangeGigOrFest}\r\n                                    />\r\n                                    <label className=\"form-check-label\">Gig</label>\r\n                                </div>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"gigOrFestivalRadios\"\r\n                                        id=\"festivalRadio\"\r\n                                        value=\"Festival\"\r\n                                        checked={this.state.gig_or_fest === 'Festival'}\r\n                                        onChange={this.onChangeGigOrFest}\r\n                                    />\r\n                                    <label className=\"form-check-label\">Festival</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Tour Name:</label>\r\n                                <input type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"tourName\"\r\n                                    name=\"tourName\"\r\n                                    value={this.state.gig_tourFestName}\r\n                                    onChange={this.onChangeGigTourFestName}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Bands:</label>\r\n                                <textarea className=\"form-control\"\r\n                                    id=\"bands\"\r\n                                    name=\"bands\"\r\n                                    value={this.state.gig_bands}\r\n                                    onChange={this.onChangeGigBands}\r\n                                />\r\n                                <small id=\"bandHelp\"\r\n                                    className=\"form-text text-muted\"\r\n                                    style={{ marginTop: 2 }}>\r\n                                    Please place each band/artist on a new line.\r\n                                    </small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Venue:</label>\r\n                                <input type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"venueName\"\r\n                                    name=\"venueName\"\r\n                                    value={this.state.gig_venue}\r\n                                    onChange={this.onChangeGigVenue}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" value=\"Create Gig\" className=\"btn btn-primary\">Create Gig</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n// <button className=\"btn btn-primary\" onClick={this.changeToTourName(true)}>Reset</button>"]},"metadata":{},"sourceType":"module"}